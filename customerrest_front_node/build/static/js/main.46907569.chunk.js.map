{"version":3,"sources":["components/Item.js","components/List.js","services/customers.js","components/CustomerTable.js","services/trainings.js","services/times.js","components/TrainingTable.js","Hooks/useFormInput.js","components/TrainingForm.js","pages/Hookpage.js","components/CustomerForm.js","pages/Formspage.js","components/Calendar.js","pages/Calendarpage.js","components/Welcome.js","App.js","serviceWorker.js","index.js"],"names":["Item","_ref","item","deleteCustomer","deleteTraining","keys","Object","filteredVals","values","filter","val","filteredKey","key","i","length","react_default","a","createElement","map","itemkey","className","concat","firstname","Link","to","links","href","match","Add_default","Delete_default","onClick","List","data","components_Item","services_customers","fetchAll","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","fetch","sent","json","console","log","status","abrupt","content","stop","this","apply","arguments","create","_ref2","_callee2","object","_context2","method","mode","headers","Content-Type","body","JSON","stringify","_x","_ref3","_callee3","id","_context3","_x2","CustomerTable","_useState","useState","_useState2","slicedToArray","customers","setCustomers","_useState3","_useState4","filterString","setFilterString","_useState5","_useState6","customerHeaders","setCustomerheaders","_useState7","_useState8","sorted","setSorted","_useState9","_useState10","filterKey","setFilterkey","customersToShow","toLowerCase","includes","fetchData","customerService","useEffect","label","value","onChange","e","target","header","toConsumableArray","sort","b","localeCompare","toUpperCase","components_List","confirmAlert","title","message","buttons","getTrainings","trainings","elem","date","activity","duration","customer","lastname","services_trainings","_ref4","_callee4","_context4","times","BigCalendar","momentLocalizer","moment","input","Date","toLocaleDateString","minutes","newDateObject","now","setMinutes","getMinutes","TrainingTable","setTrainings","trainingHeaders","setTrainingheaders","trainingsToShow","toString","formatted","trainingService","useFormInput","initialValue","setValue","TrainingForm","props","handleFormSubmit","preventDefault","history","push","onSubmit","htmlFor","assign","placeholder","type","required","min","withStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","display","flexDirection","classes","BrowserRouter","List_default","component","style","textDecoration","ListItem_default","button","ListItemText_default","primary","Divider_default","divider","Route","path","render","components_CustomerTable","components_TrainingTable","exact","components_TrainingForm","params","CustomerForm","streetaddress","postcode","city","email","phone","components_CustomerForm","MyCalendar","events","localizer","show","react_big_calendar_lib_default","startAccessor","endAccessor","selectable","onSelectEvent","onSelectSlot","Calendarpage","calendarTrainings","start","end","Calendar","Welcome","Icon","index","icons_List_default","PersonAdd_default","CalendarToday_default","TemporaryDrawer","state","left","toggleDrawer","side","open","_this","setState","defineProperty","sideList","list","text","ListItemIcon_default","App_Icon","Button_default","Drawer_default","onClose","tabIndex","role","components_Welcome","pages_Hookpage","pages_Formspage","pages_Calendarpage","React","Component","fullList","Boolean","window","location","hostname","ReactDOM","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.46907569.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Add from '@material-ui/icons/Add';\r\nimport Delete from '@material-ui/icons/Delete';\r\n\r\nconst Item = ({ item, deleteCustomer, deleteTraining }) => {\r\n\r\n  const keys = Object.keys(item)\r\n  const values = Object.values(item)\r\n  const filteredVals = values.filter(val => typeof val === 'string' || typeof val === 'number')\r\n  const filteredKey = keys.filter((key, i ) => i < filteredVals.length)\r\n\r\n    return (\r\n      <tr>\r\n    {filteredKey.map((itemkey, i) => <td className={`priority-${i+1}`} key={i}>{item[itemkey]}</td>)}\r\n    {item.firstname ? <td><Link to={`/addtraining/${item.links[0].href.match(/\\d+/)}`}><Add className=\"hoverableIcon\" /></Link></td> : null }\r\n    {item.firstname ? <td><Delete className=\"hoverableIcon\" onClick={() => deleteCustomer(item)} /></td> : <td><Delete className=\"hoverableIcon\" onClick={() => deleteTraining(item)} /></td> }\r\n    </tr>\r\n    )\r\n}\r\n\r\nexport default Item\r\n","import React from 'react'\r\nimport Item from './Item'\r\n\r\nconst List = ({ data, deleteCustomer, deleteTraining }) => {\r\n  return (\r\n    <tbody>\r\n    {data.map((item, i) =>\r\n      <Item key={i} deleteCustomer={deleteCustomer} deleteTraining={deleteTraining} item={item}/>\r\n    )}\r\n    </tbody>\r\n  )\r\n}\r\n\r\nexport default List\r\n","\r\nconst fetchAll = async () => {\r\n  let response = await fetch('https://customerrest.herokuapp.com/api/customers');\r\n  let data = await response.json()\r\n  console.log(response.status)\r\n  return data.content\r\n}\r\n\r\nconst create = async (object) => {\r\n  let response = await fetch('https://customerrest.herokuapp.com/api/customers',\r\n  { method: \"POST\",\r\n    mode: \"cors\",\r\n    headers: {\"Content-Type\": \"application/json\"},\r\n    body: JSON.stringify(object) })\r\n    console.log(response.status)\r\n  return response.json()\r\n}\r\n\r\nconst deleteCustomer = async (id) => {\r\n  let response = await fetch(`https://customerrest.herokuapp.com/api/customers/${id}`,\r\n  { method: \"DELETE\",\r\n    mode: \"cors\",\r\n    headers: {\"Content-Type\": \"application/json\"}\r\n  })\r\n  console.log(response.status)\r\n  return response\r\n}\r\n\r\nexport default { fetchAll, create, deleteCustomer }\r\n","import React, { useState , useEffect} from 'react'\r\nimport List from './List'\r\nimport customerService from '../services/customers'\r\nimport { confirmAlert } from 'react-confirm-alert'\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'\r\n\r\n\r\nconst CustomerTable = () => {\r\nconst [customers, setCustomers] = useState([])\r\nconst [filterString, setFilterString] = useState('')\r\nconst [customerHeaders, setCustomerheaders] = useState([])\r\nconst [sorted, setSorted] = useState([0])\r\nconst [filterKey, setFilterkey] = useState(['firstname'])\r\nconst customersToShow = customers.filter(a => a[filterKey].toLowerCase().includes(filterString.toLowerCase()))\r\n\r\n  const fetchData = async () => {\r\n    const customers = await customerService.fetchAll()\r\n    setCustomers(customers)\r\n    const values = Object.values(customers[0])\r\n    const keys = Object.keys(customers[0])\r\n    const filteredVals = values.filter(val => typeof val === 'string')\r\n    const filteredKey = keys.filter((key, i ) => i < filteredVals.length)\r\n    setCustomerheaders(filteredKey)\r\n  }\r\n\r\n   useEffect(() => {\r\n    fetchData()\r\n  }, [])\r\n\r\n  const sortByKey = (key) => {\r\n    if (filterKey === key && sorted === 0){\r\n      setFilterkey(key)\r\n      setSorted(1)\r\n      if(typeof customers[0][key] === 'string'){\r\n        setCustomers([...customers].sort((a, b) => b[key].localeCompare(a[key])))\r\n      } else {\r\n        setCustomers([...customers].sort((a, b) => b[key] - a[key]))\r\n      }\r\n    } else {\r\n      setFilterkey(key)\r\n      setSorted(0)\r\n      if(typeof customers[0][key] === 'string'){\r\n        setCustomers([...customers].sort((a, b) => a[key].localeCompare(b[key])))\r\n      } else {\r\n        setCustomers([...customers].sort((a, b) => a[key] - b[key]))\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  const deleteCustomer = async (item) => {\r\n    const id = item.links[0].href.match(/\\d+/)\r\n    await customerService.deleteCustomer(id)\r\n    fetchData()\r\n  }\r\n\r\n  const handleFilterChange = (e) => {\r\n    setFilterString(e.target.value)\r\n  }\r\n\r\n  const confirm = (item) => {\r\n  confirmAlert(\r\n    {\r\n       title: 'Confirm to delete',\r\n       message: 'Are you sure want to delete customer',\r\n       buttons:\r\n       [{\r\n          label: 'Yes',\r\n          onClick: () => deleteCustomer(item)},\r\n         {\r\n           label: 'No',\r\n           onClick: () => console.log('no')\r\n      }]\r\n     })\r\n   }\r\n\r\n  return (\r\n  <div>\r\n  <p> Filter by <b>{filterKey}</b> </p>\r\n  <input label=\"filter\" value={filterString} onChange={handleFilterChange}/>\r\n    <table>\r\n      <thead><tr>{customerHeaders.map((header, i) => <th key={i} className={`priority-${i+1}`} onClick={() => sortByKey(header)}>{header.toUpperCase()}</th>)}<th className=\"notHoverableHeader\">ADD TRAINING</th><th className=\"notHoverableHeader\">DELETE</th></tr></thead>\r\n        <List data={customersToShow} deleteCustomer={confirm}/>\r\n    </table>\r\n\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default CustomerTable\r\n","\r\nconst fetchAll = async () => {\r\n  let response = await fetch('https://customerrest.herokuapp.com/api/trainings');\r\n  let data = await response.json()\r\n  console.log(response.status)\r\n  return data.content\r\n}\r\n\r\nconst getTrainings = async () => {\r\n    let response = await fetch('https://customerrest.herokuapp.com/gettrainings');\r\n  let data = await response.json()\r\n  console.log(response.status)\r\n const trainings = data.map((elem, i) => i ={\r\n                            date: elem.date, \r\n                            activity: elem.activity, \r\n                            duration: elem.duration,\r\n                            customer: elem.customer.firstname + \" \" + elem.customer.lastname})\r\n  return trainings\r\n}\r\n\r\nconst create = async (object) => {\r\n  let response = await fetch('https://customerrest.herokuapp.com/api/trainings',\r\n  { method: \"POST\",\r\n    mode: \"cors\",\r\n    headers: {\"Content-Type\": \"application/json\"},\r\n    body: JSON.stringify(object) })\r\n    console.log(response.status)\r\n  return response.json()\r\n}\r\n\r\nconst deleteTraining = async (id) => {\r\n  let response = await fetch(`https://customerrest.herokuapp.com/api/trainings/${id}`,\r\n  { method: \"DELETE\",\r\n    mode: \"cors\",\r\n    headers: {\"Content-Type\": \"application/json\"}\r\n  })\r\n  console.log(response.status)\r\n  return response.status\r\n}\r\n\r\nexport default { fetchAll, create, deleteTraining, getTrainings }\r\n","import moment from 'moment'\r\nimport BigCalendar from 'react-big-calendar'\r\n\r\nconst getLocalizer = () => {\r\n  return BigCalendar.momentLocalizer(moment)\r\n}\r\n\r\nconst convertToDate = (input) => {\r\n  return new Date(input)\r\n}\r\n\r\nconst formatDate = (input) => {\r\n  return new Date(input).toLocaleDateString('fi-FI')\r\n}\r\n\r\nconst addMinutes = (date, minutes) => {\r\n  const newDateObject = new Date(date)\r\n  const now = newDateObject.setMinutes(newDateObject.getMinutes() + 30)\r\n    return new Date(now)\r\n}\r\n\r\nexport default { getLocalizer, formatDate, addMinutes, convertToDate }\r\n","import React, { useState , useEffect} from 'react'\r\nimport List from './List'\r\nimport trainingService from '../services/trainings'\r\nimport { confirmAlert } from 'react-confirm-alert'\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'\r\nimport times from '../services/times'\r\n\r\n\r\nconst TrainingTable = () => {\r\n\r\n   const [trainings, setTrainings] = useState([])\r\n  const [filterString, setFilterString] = useState('')\r\n  const [sorted, setSorted] = useState(0)\r\n  const [trainingHeaders, setTrainingheaders] = useState([])\r\n  const [filterKey, setFilterkey] = useState(['activity'])\r\n  const trainingsToShow = trainings.filter(a => a[filterKey].toString().toLowerCase().includes(filterString.toLowerCase()))\r\n\r\n  const fetchData = async () => {\r\n    const trainings = await trainingService.getTrainings()\r\n    const formatted = trainings.map((elem, i) => i ={ date: times.formatDate(elem.date), duration: elem.duration, activity: elem.activity, customer: elem.customer })\r\n    setTrainings(formatted)\r\n    const values = Object.values(formatted[0])\r\n    const keys = Object.keys(formatted[0])\r\n    const filteredVals = values.filter(val => typeof val === 'string')\r\n    const filteredKey = keys.filter((key, i ) => i <= filteredVals.length)\r\n    setTrainingheaders(filteredKey)\r\n  }\r\n\r\n  const handleFilterChange = (e) => {\r\n    setFilterString(e.target.value)\r\n  }\r\n\r\n   useEffect(() => {\r\n    fetchData()\r\n  }, [])\r\n\r\n  const sortByKey = (key) => {\r\n\r\n    if (filterKey === key && sorted === 0){\r\n      setSorted(1)\r\n      if (typeof trainings[0][key] === 'string'){\r\n        setTrainings([...trainings].sort((a, b) => a[key].localeCompare(b[key])))\r\n      } else {\r\n        setTrainings([...trainings].sort((a, b) => b[key] - a[key]))\r\n      }\r\n    } else {\r\n      setSorted(0)\r\n    setFilterkey(key)\r\n     if (typeof trainings[0][key] === 'string'){\r\n      setTrainings([...trainings].sort((a, b) => b[key].localeCompare(a[key])))\r\n    } else {\r\n      setTrainings([...trainings].sort((a, b) => a[key] - b[key]))\r\n    }\r\n  }\r\n  }\r\n\r\n    const deleteTraining = async (item) => {\r\n      const id = item.links[0].href.match(/\\d+/)\r\n        await trainingService.deleteTraining(id)\r\n          fetchData()\r\n    }\r\n\r\n    const confirm = (item) => {\r\n    confirmAlert(\r\n      {\r\n         title: 'Confirm to delete',\r\n         message: 'Are you sure want to delete training',\r\n         buttons:\r\n         [{\r\n            label: 'Yes',\r\n            onClick: () => deleteTraining(item)},\r\n           {\r\n             label: 'No',\r\n             onClick: () => console.log('no')\r\n        }]\r\n       })\r\n     }\r\n\r\n  return (\r\n  <div>\r\n  <p> Filter by <b>{filterKey}</b> </p>\r\n  <input label=\"filter\" value={filterString} onChange={handleFilterChange}/>\r\n  <table>\r\n  <thead><tr>{trainingHeaders.map((header, i) => <th className={`priority-${i+1}`} key={i} onClick={() => sortByKey(header)}>{header.toUpperCase()}</th>)}<th className=\"notHoverableHeader\">DELETE</th></tr></thead>\r\n  <List data={trainingsToShow} deleteTraining={confirm} />\r\n  </table>\r\n  </div>\r\n\r\n  )\r\n}\r\n\r\nexport default TrainingTable\r\n","import { useState } from 'react'\r\n\r\nconst useFormInput = (initialValue) => {\r\n  const [value, setValue] = useState(initialValue)\r\n\r\n  const handleInputChange = (e) => {\r\n    setValue(e.target.value)\r\n  }\r\n\r\n  return {\r\n    value,\r\n    onChange: handleInputChange\r\n  }\r\n}\r\n\r\nexport default useFormInput\r\n","import React from 'react'\r\nimport useFormInput from '../Hooks/useFormInput'\r\nimport trainingService from '../services/trainings'\r\n\r\nconst TrainingForm = (props) => {\r\n\r\nconst activity = useFormInput(\"\")\r\nconst duration = useFormInput(\"\")\r\nconst date = useFormInput(\"\")\r\n\r\nconst handleFormSubmit = async (e) => {\r\n  e.preventDefault()\r\n  const object = {\r\n    date: date.value,\r\n    duration: duration.value,\r\n    activity: activity.value,\r\n    customer: `http://customerrest.herokuapp.com/api/customers/${props.id}`\r\n  }\r\n\r\n  //console.log('will send this:', object)\r\n  await trainingService.create(object)\r\n  props.history.push(\"/trainings\")\r\n}\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n    <form onSubmit={handleFormSubmit}>\r\n    <p> enter info </p>\r\n    <label htmlFor=\"activity\">activity</label>\r\n    <input id=\"activity\" placeholder=\"activity\" type=\"text\" {...activity} required /><br />\r\n    <label htmlFor=\"duration\">duration</label>\r\n    <input id=\"duration\" placeholder=\"duration\" min=\"1\" type=\"number\" {...duration} required /><br />\r\n    <label htmlFor=\"date\">date</label>\r\n    <input id=\"date\" placeholder=\"date\" type=\"date\" {...date} required /><br />\r\n    <br />\r\n    <input value=\"create\" type=\"submit\" />\r\n    </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TrainingForm\r\n","import React from 'react'\r\nimport CustomerTable from '../components/CustomerTable'\r\nimport TrainingTable from '../components/TrainingTable'\r\nimport TrainingForm from '../components/TrainingForm'\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\"\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nconst Hookpage = (props) => {\r\n  const { classes } = props\r\n  return (\r\n  <Router>\r\n  <div>\r\n    <List component=\"nav\" className={classes.root}>\r\n        <Link style={{ textDecoration: 'none' }} to=\"/customers\"><ListItem button>\r\n          <ListItemText primary=\"customers\" /></ListItem></Link>\r\n          <Divider />\r\n          <Link style={{ textDecoration: 'none' }} to=\"/trainings\"><ListItem button divider>\r\n          <ListItemText primary=\"trainings\" /></ListItem></Link>\r\n      </List>\r\n    <div>\r\n      <Route path=\"/customers\" render={() => <CustomerTable/>}/>\r\n      <Route path=\"/trainings\" render={() => <TrainingTable/>}/>\r\n      <Route exact path=\"/addtraining/:id\" render={(props) => <TrainingForm {...props} id={props.match.params.id}/>}/>\r\n    </div>\r\n    </div>\r\n  </Router>\r\n  )\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: '360px',\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'flex',\r\n    flexDirection: 'row'\r\n  },\r\n})\r\n\r\nexport default withStyles(styles)(Hookpage)\r\n","import React from 'react'\r\nimport useFormInput from '../Hooks/useFormInput'\r\nimport customerService from '../services/customers'\r\n\r\nconst CustomerForm = (props) => {\r\n\r\n  const firstname = useFormInput(\"\")\r\n  const lastname = useFormInput(\"\")\r\n  const streetaddress = useFormInput(\"\")\r\n  const postcode = useFormInput(\"\")\r\n  const city = useFormInput(\"\")\r\n  const email = useFormInput(\"\")\r\n  const phone = useFormInput(\"\")\r\n\r\n  const handleFormSubmit = async (e) => {\r\n    e.preventDefault()\r\n    const object = {\r\n      firstname: firstname.value,\r\n      lastname: lastname.value,\r\n      streetaddress: streetaddress.value,\r\n      postcode: postcode.value,\r\n      city: city.value,\r\n      email: email.value,\r\n      phone: phone.value\r\n    }\r\n    await customerService.create(object)\r\n    props.history.push(\"/customers\")\r\n  }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n      <form onSubmit={handleFormSubmit}>\r\n      <p> enter info </p>\r\n      <label htmlFor=\"firstname\">firstname</label>\r\n      <input id=\"firstname\" placeholder=\"firstname\" type=\"text\" {...firstname} required />\r\n      <label htmlFor=\"lastname\">lastname</label>\r\n      <input id=\"lastname\" placeholder=\"lastname\" type=\"text\" {...lastname} required />\r\n      <label htmlFor=\"streetaddress\">streetaddress</label>\r\n      <input id=\"streetaddress\" placeholder=\"streetaddress\" type=\"text\" {...streetaddress} required/>\r\n      <label htmlFor=\"postcode\">postcode</label>\r\n      <input id=\"postcode\" placeholder=\"postcode\" type=\"text\" {...postcode} required />\r\n      <label htmlFor=\"city\">city</label>\r\n      <input id=\"city\" placeholder=\"city\" type=\"text\" {...city} required /><br />\r\n      <label htmlFor=\"email\">email</label>\r\n      <input id=\"email\" placeholder=\"email@email.com\" type=\"email\" {...email} required/>\r\n      <label htmlFor=\"phone\">phone</label>\r\n      <input id=\"phone\" placeholder=\"phone\" type=\"text\" {...phone} required />\r\n      <input value=\"create\" type=\"submit\" />\r\n      </form>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default CustomerForm\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport CustomerForm from '../components/CustomerForm'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\n\r\nconst Formspage = (props) => {\r\n  const { classes } = props\r\n\r\n  return (\r\n  <Router>\r\n    <List component=\"nav\" className={classes.root}>\r\n      <Link style={{ textDecoration: 'none' }} to=\"/customerform\"><ListItem button>\r\n        <ListItemText primary=\"add customer\" /></ListItem></Link>\r\n    <div>\r\n      <Route path=\"/customerform\" render={(props) => <CustomerForm {...props}/>}/>\r\n    </div>\r\n    </List>\r\n  </Router>\r\n  )\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: '360px',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n})\r\n\r\nexport default withStyles(styles)(Formspage)\r\n","import React from 'react'\r\nimport BigCalendar from 'react-big-calendar'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\n\r\nconst MyCalendar = ({ events, localizer, show }) => (\r\n   <div className={\"calendar\"}>\r\n    <BigCalendar\r\n      localizer={localizer}\r\n      events={events}\r\n      startAccessor=\"start\"\r\n      endAccessor=\"end\"\r\n      selectable={true}\r\n      onSelectEvent={(e) =>show(e)}\r\n      onSelectSlot={(e) =>show(e)}\r\n    />\r\n  </div>\r\n)\r\n\r\nexport default MyCalendar\r\n","import React, { useState, useEffect } from 'react';\r\nimport MyCalendar from '../components/Calendar'\r\nimport times from '../services/times'\r\nimport trainingService from '../services/trainings'\r\n\r\nconst Calendarpage = () => {\r\n\r\n  const localizer = times.getLocalizer()\r\n  const [trainings, setTrainings] = useState([])\r\n\r\n  const fetchData = async () => {\r\n    const trainings = await trainingService.fetchAll()\r\n    const calendarTrainings = trainings.map(elem => ({title: elem.activity, start: times.convertToDate(elem.date), end: times.addMinutes(elem.date, elem.duration)}))\r\n    setTrainings(calendarTrainings)\r\n}\r\n\r\nuseEffect(() => {\r\n fetchData()\r\n}, [])\r\n\r\nconst show = (e) => {\r\n  console.log(e)\r\n}\r\n\r\n  return (\r\n    <div>\r\n    <h2> Calendar </h2>\r\n    <MyCalendar events={trainings} localizer={localizer} show={show} />\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Calendarpage\r\n","import React from 'react'\r\n\r\nconst Welcome = () => {\r\n  return(\r\n  <div>\r\n  <h2>customerrest_front</h2>\r\n  </div>\r\n)\r\n}\r\n\r\nexport default Welcome\r\n","import React from 'react';\r\nimport Hookpage from './pages/Hookpage'\r\nimport Formspage from './pages/Formspage'\r\nimport Calendarpage from './pages/Calendarpage'\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport './index.css'\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CalendarIcon from '@material-ui/icons/CalendarToday';\r\nimport PersonAdd from '@material-ui/icons/PersonAdd';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Welcome from './components/Welcome'\r\n\r\nconst styles = {\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n}\r\n\r\nconst Icon = ({ index }) => {\r\n  if(index === 0){\r\n      return (<ListIcon />)\r\n  } else if (index === 1){\r\n    return (<PersonAdd />)\r\n  } return (<CalendarIcon />)\r\n}\r\n\r\nclass TemporaryDrawer extends React.Component {\r\n  state = { left: false }\r\n\r\n  toggleDrawer = (side, open) => () => {\r\n    this.setState({ [side]: open })\r\n  }\r\n\r\n\r\n  render() {\r\nconst { classes } = this.props;\r\n\r\n    const sideList = (\r\n      <div className={classes.list}>\r\n        <List>\r\n          {['list', 'add', 'calendar'].map((text, index) => (\r\n            <Link style={{ textDecoration: 'none' }} key={index} to={`/${text}`}><ListItem button key={text}>\r\n              <ListItemIcon><Icon index={index}/></ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem></Link>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    )\r\n\r\n    return (\r\n  <Router>\r\n      <div>\r\n        <Button onClick={this.toggleDrawer('left', true)}>Navigation</Button>\r\n        <Drawer open={this.state.left} onClose={this.toggleDrawer('left', false)}>\r\n          <div\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            onClick={this.toggleDrawer('left', false)}>\r\n            {sideList}\r\n          </div>\r\n        </Drawer>\r\n        <Route exact path=\"/\" render={() => <Welcome />}/>\r\n        <Route path=\"/list\" render={() => <Hookpage/>}/>\r\n        <Route path=\"/add\" render={() => <Formspage/>}/>\r\n        <Route path=\"/calendar\" render={() => <Calendarpage/>}/>\r\n      </div>\r\n</Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(TemporaryDrawer);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}